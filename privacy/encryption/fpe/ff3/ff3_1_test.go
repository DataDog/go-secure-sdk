// Copyright (c) 2021- Ubiq Security, Inc. (https://ubiqsecurity.com)
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

package ff3

import (
	"testing"
)

func testFF3_1(t *testing.T, K, T []byte, PT, CT, alphabet string) {
	t.Helper()

	if len(PT) != len(CT) {
		t.FailNow()
	}

	ff3_1, err := NewFF3_1(K, T, alphabet)
	if err != nil {
		t.Fatal(err)
	}

	out, err := ff3_1.Encrypt(PT, T)
	if err != nil {
		t.Fatal(err)
	}

	if out != CT {
		t.Errorf("Expected %v, got %v", CT, out)
		t.FailNow()
	}

	out, err = ff3_1.Decrypt(CT, T)
	if err != nil {
		t.Fatal(err)
	}

	if out != PT {
		t.FailNow()
	}
}

func TestFF3_1Ubiq1(t *testing.T) {
	t.Parallel()

	testFF3_1(t,
		[]byte{
			0xef, 0x43, 0x59, 0xd8, 0xd5, 0x80, 0xaa, 0x4f,
			0x7f, 0x03, 0x6d, 0x6f, 0x04, 0xfc, 0x6a, 0x94,
		},
		[]byte{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		"890121234567890000",
		"075870132022772250",
		"0123456789")
}

func TestFF3_1Ubiq2(t *testing.T) {
	t.Parallel()

	testFF3_1(t,
		[]byte{
			0xef, 0x43, 0x59, 0xd8, 0xd5, 0x80, 0xaa, 0x4f,
			0x7f, 0x03, 0x6d, 0x6f, 0x04, 0xfc, 0x6a, 0x94,
		},
		[]byte{
			0x39, 0x38, 0x37, 0x36, 0x35, 0x34, 0x33,
		},
		"890121234567890000",
		"251467746185412673",
		"0123456789")
}

func TestFF3_1Ubiq3(t *testing.T) {
	t.Parallel()

	testFF3_1(t,
		[]byte{
			0xef, 0x43, 0x59, 0xd8, 0xd5, 0x80, 0xaa, 0x4f,
			0x7f, 0x03, 0x6d, 0x6f, 0x04, 0xfc, 0x6a, 0x94,
		},
		[]byte{
			0x37, 0x37, 0x37, 0x37, 0x70, 0x71, 0x72,
		},
		"89012123456789abcde",
		"dwb01mx9aa2lmi3hrfm",
		"0123456789abcdefghijklmnopqrstuvwxyz")
}

func TestFF3_1Ubiq4(t *testing.T) {
	t.Parallel()

	testFF3_1(t,
		[]byte{
			0xef, 0x43, 0x59, 0xd8, 0xd5, 0x80, 0xaa, 0x4f,
			0x7f, 0x03, 0x6d, 0x6f, 0x04, 0xfc, 0x6a, 0x94,
			0x3b, 0x80, 0x6a, 0xeb, 0x63, 0x08, 0x27, 0x1f,
		},
		[]byte{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		"890121234567890000",
		"327701863379108161",
		"0123456789")
}

func TestFF3_1Ubiq5(t *testing.T) {
	t.Parallel()

	testFF3_1(t,
		[]byte{
			0xef, 0x43, 0x59, 0xd8, 0xd5, 0x80, 0xaa, 0x4f,
			0x7f, 0x03, 0x6d, 0x6f, 0x04, 0xfc, 0x6a, 0x94,
			0x3b, 0x80, 0x6a, 0xeb, 0x63, 0x08, 0x27, 0x1f,
		},
		[]byte{
			0x39, 0x38, 0x37, 0x36, 0x35, 0x34, 0x33,
		},
		"890121234567890000",
		"738670454850774517",
		"0123456789")
}

func TestFF3_1Ubiq6(t *testing.T) {
	t.Parallel()

	testFF3_1(t,
		[]byte{
			0xef, 0x43, 0x59, 0xd8, 0xd5, 0x80, 0xaa, 0x4f,
			0x7f, 0x03, 0x6d, 0x6f, 0x04, 0xfc, 0x6a, 0x94,
			0x3b, 0x80, 0x6a, 0xeb, 0x63, 0x08, 0x27, 0x1f,
		},
		[]byte{
			0x37, 0x37, 0x37, 0x37, 0x70, 0x71, 0x72,
		},
		"89012123456789abcde",
		"o3a1og390b5uduvwyw5",
		"0123456789abcdefghijklmnopqrstuvwxyz")
}

func TestFF3_1Ubiq7(t *testing.T) {
	t.Parallel()

	testFF3_1(t,
		[]byte{
			0xef, 0x43, 0x59, 0xd8, 0xd5, 0x80, 0xaa, 0x4f,
			0x7f, 0x03, 0x6d, 0x6f, 0x04, 0xfc, 0x6a, 0x94,
			0x3b, 0x80, 0x6a, 0xeb, 0x63, 0x08, 0x27, 0x1f,
			0x65, 0xcf, 0x33, 0xc7, 0x39, 0x1b, 0x27, 0xf7,
		},
		[]byte{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
		"890121234567890000",
		"892299037726855422",
		"0123456789")
}

func TestFF3_1Ubiq8(t *testing.T) {
	t.Parallel()

	testFF3_1(t,
		[]byte{
			0xef, 0x43, 0x59, 0xd8, 0xd5, 0x80, 0xaa, 0x4f,
			0x7f, 0x03, 0x6d, 0x6f, 0x04, 0xfc, 0x6a, 0x94,
			0x3b, 0x80, 0x6a, 0xeb, 0x63, 0x08, 0x27, 0x1f,
			0x65, 0xcf, 0x33, 0xc7, 0x39, 0x1b, 0x27, 0xf7,
		},
		[]byte{
			0x39, 0x38, 0x37, 0x36, 0x35, 0x34, 0x33,
		},
		"890121234567890000",
		"045013216693726967",
		"0123456789")
}

func TestFF3_1Ubiq9(t *testing.T) {
	t.Parallel()

	testFF3_1(t,
		[]byte{
			0xef, 0x43, 0x59, 0xd8, 0xd5, 0x80, 0xaa, 0x4f,
			0x7f, 0x03, 0x6d, 0x6f, 0x04, 0xfc, 0x6a, 0x94,
			0x3b, 0x80, 0x6a, 0xeb, 0x63, 0x08, 0x27, 0x1f,
			0x65, 0xcf, 0x33, 0xc7, 0x39, 0x1b, 0x27, 0xf7,
		},
		[]byte{
			0x37, 0x37, 0x37, 0x37, 0x70, 0x71, 0x72,
		},
		"89012123456789abcde",
		"0sxaooj0jjj5qqfomh8",
		"0123456789abcdefghijklmnopqrstuvwxyz")
}

func TestFF3_1DDog1(t *testing.T) {
	t.Parallel()

	testFF3_1(t,
		[]byte{
			0xef, 0x43, 0x59, 0xd8, 0xd5, 0x80, 0xaa, 0x4f,
			0x7f, 0x03, 0x6d, 0x6f, 0x04, 0xfc, 0x6a, 0x94,
			0x3b, 0x80, 0x6a, 0xeb, 0x63, 0x08, 0x27, 0x1f,
			0x65, 0xcf, 0x33, 0xc7, 0x39, 0x1b, 0x27, 0xf7,
		},
		[]byte{
			0x37, 0x37, 0x37, 0x37, 0x70, 0x71, 0x72,
		},
		"1wSOmkjQFgm35IqFrS7hHbDzYj",
		"yG0tTJX9edoS2G4PEZcjsXVpga",
		"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ")
}
